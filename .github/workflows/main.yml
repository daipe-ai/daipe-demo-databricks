name: pipeline
on:
  push:
  schedule:
    - cron: "0 6 * * *"

jobs:
  build_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - uses: conda-incubator/setup-miniconda@v2.0.0
        with:
          miniconda-version: 'py38_4.8.3'

      - name: cache venv
        id: cache-venv
        uses: actions/cache@v2
        with:
          path: |
            .venv
            ~/.poetry/env
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: setup
        run: |
          export SHELL=$SHELL # for python to be able to access the bash version
          ./env-init.sh -y --verbose

      - name: linting
        run: |
          eval "$(conda shell.bash hook)"
          conda activate $PWD/.venv
          source ~/.poetry/env
          poe black-check
          poe flake8
  deploy:
    needs: build_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - uses: conda-incubator/setup-miniconda@v2.0.0
        with:
          miniconda-version: 'py38_4.8.3'

      - name: cache venv
        id: cache-venv
        uses: actions/cache@v2
        with:
          path: |
            .venv
            ~/.poetry/env
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: setup secrets
        env:
          DBX_URL: ${{ secrets.DBX_URL }}
          DBX_TOKEN: ${{ secrets.DBX_TOKEN }}
        run: |
          cp .env.dist .env
          sed -i "s,DBX_TOKEN=,DBX_TOKEN=$DBX_TOKEN,g" .env
          sed -i "s,\[Your DEV cluster address\],$DBX_URL,g" src/$(ls src)/_config/config_dev.yaml

      - name: setup
        run: |
          export SHELL=$SHELL # for python to be able to access the bash version
          ./env-init.sh -y --verbose

      - name: deploy
        run: |
          eval "$(conda shell.bash hook)"
          conda activate $PWD/.venv
          source ~/.poetry/env
          poetry install --no-root
          daipe dbx deploy --env=dev
